# 1.Imprimer du text :
print("bonjour,monde!")

#2.varibles:
# varibles de type entier,flottant et chaine
x=10
y=3.14
nom="Alice"
print(x,y,nom)

# 3.opération mathématique:
a=5
b=2
somme=a+b
produit=a*b
quotient=a/b
reste=a%b
puissance=a**b
print(somme,produit,quotient,reste,puissance)

# 4.conditions (if/else):
age=18
if age>= 18:
    print("tu es majour.")
else:
    print("tu es mineur")
    
# 5.BOUCLES (FOR ET WHILE):

for i in range(5):
    print("i vaut :" , i)
# Boucles while 

compteur = 0 
while compteur < 5 :
    print("compteur :", compteur)
    compteur += 1
# 6. fonctions :
def salut(nom):
    return f"salut, {nom}!"
message = salut("Alice")
print(message)
# 7.listes :
fruits = ["pomme","banane","orange"]
print(fruits)
fruits.append("mangue") 
print(fruits[1])

# 8.Dictionnaires :
personne ={"nom":"Alice", "age":25, "ville":"paris"}
print(personne["nom"])
personne["profession"] = "ingénieure"
print(personne)

# 9. Boucles sur une liste ou un Dictionnaires:

# liste

for fruit in fruits:
    print(fruit)
    
# Dictionnaire :

for cle , valeur in personne.items():
    print(cle,":",valeur)
# 10.Gestion des erreurs (try/except)

# try:
#     resultat = 10 / 0
# except zéroDivisionError:
#     print ("Erreur : division par zéro !")

# 11.Entrée utilisateur :

nom = input("Quel est ton nom ?")
print("bonjour,",nom)

# 12. Lire et écrire dans un fichier :
# Ecrire dans un fichier :

with open ("nom_fichier.txt", "r") as fichier:
    contenu = fichier.read()
    print(contenu)

# 13.classes et objets (poo - programmatoin orienté objet):

class personne:
    def __init__(self,nom, age):
        self.nom = nom
        self.age = age
        
    def se_presenter(self):
        print(f"bonjour,je m'appelle {self.nom} et j'ai {self.age} ans.")
        
    personne1= personne("Alice", 25)
    personne1.se_presenter()